#!/bin/bash

# Before pytest, makesure cleanup is enabled so that
# extra files aren't pushed to the repo. 

echo 'forcing cleanup test on'
scripts/cleanup_toggle.py -en

# Now this script captures the exit codes so that I can run a commit hook
# That only allows commits when unifier exits 0

echo 'pytest'
pytest --cov
pt_code=$?
echo '#################################################'

# command to stop pycache from being generated by pytest.
#python -B -m pytest --cov -v

echo 'mypy'
mypy src/
mp_code=$?
echo '#################################################'


echo 'pylint'
pylint src/
pl_code=$?


# Init hook this script, and only commit if exit code is 0
codes=( $pt_code $pl_code $mp_code )
echo '#################################################'
echo ./unifier.sh exit codes ${codes[@]}


# Loop through the exit codes and exit 1 if any test fails.
for x in "${codes[@]}"; do
    if [ $x != '0' ]; then
        echo fail 
        exit 1
    fi
done

echo pass
exit 0


#Copyright Â© 2023 Lars S.
